name: EasyAdmin PoC

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  project:
    name: Validate, check and prepare image
#    runs-on: ubuntu-latest
    runs-on: self-hosted

    steps:
      - name: Install newest PHP 8.2 version
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install Dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: PHP-CS-Fixer
        run: ./vendor/bin/php-cs-fixer fix --diff --allow-risky=yes

#      - name: Commit PHP-CS-Fixer Changes
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          commit_message: Fix styling changes by PHP-CS-Fixer

      - name: Run PHPStan
        uses: php-actions/phpstan@v3
        with:
          path: src/

      - name: PHPUnit tests
        run: ./bin/phpunit

      - name: Run profiling
        run: echo "App profiling"

      - name: PhpMetrics Scan
        uses: umutphp/phpmetrics-action@v1

      - name: Upload HTML Report
        uses: actions/upload-artifact@v1
        with:
          name: PhpMetrics Report
          path: phpmetrics.html

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ECR_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ECR_SECRET_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: easyadmin-poc
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:latest
